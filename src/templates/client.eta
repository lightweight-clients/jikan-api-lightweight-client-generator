// noinspection JSUnusedGlobalSymbols

/**
 * This file is auto-generated by the Jikan API generator.
 * Do not modify directly.
 * Configure the client via 'core.ts'.
 */

import type * as types from './types';
import { client_fetch } from './core';

<% it.endpoints.forEach(endpoint => { %>

/**
 * <%= endpoint.description %>

 */
export const <%= endpoint.name %> = async (
  <% endpoint.pathParameters.forEach(param => { %>
    <%= param.name %>: <%= param.schema.type.replace('integer', 'number') %>,
  <% }) %>
  <% if (endpoint.hasQueryParameters) { %>
    args: types.<%= endpoint.baseEndpointName %>Data,
  <% } %>
  ): Promise<
    | types.<%= endpoint.baseEndpointName %>OkResponse
    | types.<%= endpoint.baseEndpointName %>Response
  > => {
    return await client_fetch<
      <% if (endpoint.hasQueryParameters) { %>
        types.<%= endpoint.baseEndpointName %>Data,
      <% } else { %>
        never,
      <% } %>
      types.<%= endpoint.baseEndpointName %>Response
    >(
      `<%= endpoint.url.replaceAll('{', '${') %>`,
      <% if (endpoint.hasQueryParameters) { %>
       args,
      <% } %>
    );
  };
<% }) %>
